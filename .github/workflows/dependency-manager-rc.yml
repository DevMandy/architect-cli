name: Create release candidate for dependency manager

on:
  push:
    branches:
      - github-actions
      - master

env:
  CI: true
  NPM_CACHE_NAME: dependency-manager-node-modules

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - name: Setup Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: '12.x'
      # - run: npm install
      #   working-directory: ./src/dependency-manager
      # - run: npm run lint
      #   working-directory: ./src/dependency-manager
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 11.x, 12.x]
    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: ./src/dependency-manager
      - run: npm test
        working-directory: ./src/dependency-manager
  cut_release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/github-actions'
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm install
        working-directory: ./src/dependency-manager
      - run: npm run build
        working-directory: ./src/dependency-manager
      - name: Cut release candidate
        run: npm version prerelease --git-tag-version=false --preid=github-actions
        working-directory: ./src/dependency-manager
      - name: Commit version bump
        working-directory: ./src/dependency-manager
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "Github Actions"
          git config --global user.email "bot@architect.io"
          git add package.json package-lock.json
          git commit -m "New RC from commit: ${GITHUB_SHA}"
          git push "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${INPUT_REPO}.git"
