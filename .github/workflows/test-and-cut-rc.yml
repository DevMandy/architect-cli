name: Test & Cut Release Candidate

on:
  push:
    branches:
      - github-actions
      - master

env:
  CI: true
  NPM_CACHE_NAME: cache-node-modules

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.NPM_CACHE_NAME }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.NPM_CACHE_NAME }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: npm install
      - run: npm run lint
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 11.x, 12.x]
    steps:
      - uses: actions/checkout@master
        with:
          submodules: recursive
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.NPM_CACHE_NAME }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.NPM_CACHE_NAME }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm test
  cut_release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [lint, test]
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: macos-latest
            distro: macos
          - os: windows-latest
            distro: win
          - os: ubuntu-latest
            distro: deb
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.NPM_CACHE_NAME }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.NPM_CACHE_NAME }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm install
      - name: oclif build
        run: sudo npx oclif-dev pack
      - name: Archive artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist
