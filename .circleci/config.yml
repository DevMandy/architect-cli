version: 2

jobs:
  test:
    docker:
      - image: architectio/architect-cli-base:latest
        environment:
          API_HOST: $API_HOST
          DEFAULT_REGISTRY_HOST: $DEFAULT_REGISTRY_HOST
          ARCHITECT_USERNAME: $ARCHITECT_USERNAME
          ARCHITECT_PASSWORD: $ARCHITECT_PASSWORD
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="18.06.3-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: clone submodules
          command: git submodule update --recursive --init
      - run:
          name: npm link
          command: npm link .
      - run:
          name: run tests
          command: npm test
          environment:
            TEST_OUTPUT: "1"
      - run:
          name: architect deploy
          command: |
            TAG=clici-$CIRCLE_BUILD_NUM
            ENV=test-$TAG
            SERVICE=architect/addition-service:$TAG

            architect login
            architect push test/calculator-sample-project/addition-service/grpc --tag $TAG
            architect environment:clone test --name $ENV --namespace $ENV
            architect deploy $SERVICE --environment $ENV --auto_approve
            architect environment:services:destroy $ENV --service $SERVICE --auto_approve
            architect environment:destroy $ENV --auto_approve

  build:
    working_directory: ~/cli
    docker:
      - image: architectio/architect-cli-base:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: npm install
          command: npm install --unsafe-perm=true
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: npm run build
      - persist_to_workspace:
          root: ~/cli
          paths:
            - bin
            - lib
            - npm-shrinkwrap.json
            - oclif.manifest.json
            - package.json
            - package-lock.json
            - README.md

  publish:
    working_directory: ~/cli
    docker:
      - image: node:12
    steps:
      - attach_workspace:
          at: ~/cli
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/sdk/.npmrc
      - run:
          name: Publish package
          command: npm publish --access public

workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            tags:
              ignore: /.*/
            branches:
              only: /.*/
  deploy:
    jobs:
      - test:
          context: Architect Cloud
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
      - publish:
          context: NPM Packaging
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
